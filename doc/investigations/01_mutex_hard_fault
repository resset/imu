### Sooo, I get hard faults because data in altimeter_data_mtx mutex structure gets mangled.

### I checked that no thread overflows its stack:

x/256xb 0x240021f0
0x240021f0 <waAltimeter>:		0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x240021f8 <waAltimeter+8>:		0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002200 <waAltimeter+16>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002208 <waAltimeter+24>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002210 <waAltimeter+32>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002218 <waAltimeter+40>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002220 <waAltimeter+48>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002228 <waAltimeter+56>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002230 <waAltimeter+64>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002238 <waAltimeter+72>:	0x55	0x55	0x55	0x55	0xef	0xfb	0xbd	0x33
0x24002240 <waAltimeter+80>:	0x9a	0x9e	0x04	0x00	0x23	0x98	0x99	0xda
0x24002248 <waAltimeter+88>:	0x6f	0xdc	0x17	0x0e	0xe5	0xfb	0xff	0xff
0x24002250 <waAltimeter+96>:	0xff	0xff	0xff	0xff	0x07	0xc8	0xc7	0x1e
0x24002258 <waAltimeter+104>:	0xbe	0x9d	0x04	0x00	0x5b	0x3d	0x7d	0xe7
0x24002260 <waAltimeter+112>:	0x03	0x3d	0x15	0x0e	0xff	0x03	0x00	0x00
0x24002268 <waAltimeter+120>:	0x00	0x00	0x00	0x00	0xf9	0x37	0x90	0xff
0x24002270 <waAltimeter+128>:	0xff	0xff	0xff	0xff	0x73	0x08	0x00	0x08
0x24002278 <waAltimeter+136>:	0x80	0x22	0x00	0x24	0xbd	0xb4	0x00	0x08
0x24002280 <waAltimeter+144>:	0x7f	0x54	0xfe	0x12	0x00	0x00	0x00	0x00
0x24002288 <waAltimeter+152>:	0xd4	0xb0	0xfc	0xff	0xff	0xff	0xff	0xff
0x24002290 <waAltimeter+160>:	0x01	0xf8	0x0f	0x00	0x00	0x00	0x00	0x00
0x24002298 <waAltimeter+168>:	0xd0	0x8b	0xa1	0xbc	0x00	0x00	0x00	0x00
0x240022a0 <waAltimeter+176>:	0x9a	0xc1	0x59	0xff	0xff	0xff	0xff	0xff
0x240022a8 <waAltimeter+184>:	0xfc	0x83	0xb8	0x18	0x5a	0x04	0xb4	0x49
0x240022b0 <waAltimeter+192>:	0x60	0xe9	0xb4	0x1e	0x01	0x00	0x00	0x00
0x240022b8 <waAltimeter+200>:	0xc0	0x83	0x1d	0x1b	0x3b	0xb3	0x0d	0x00
0x240022c0 <waAltimeter+208>:	0xe0	0x91	0x15	0x19	0xcb	0xa8	0xff	0xff
0x240022c8 <waAltimeter+216>:	0xf9	0xff	0xff	0xff	0xff	0xff	0xff	0xff
0x240022d0 <waAltimeter+224>:	0x2c	0xff	0xff	0xff	0xff	0xff	0xff	0xff
0x240022d8 <waAltimeter+232>:	0x24	0x1f	0x00	0x00	0x00	0x00	0x00	0x00
0x240022e0 <waAltimeter+240>:	0xd0	0x0b	0x00	0x00	0x00	0x00	0x00	0x00
0x240022e8 <waAltimeter+248>:	0x66	0xd6	0xff	0xff	0xff	0xff	0xff	0xff

### This is a correct value of the altimeter_data_mtx (0xcc	0x21	0x00	0x24	0xcc	0x21	0x00	0x24	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00):

x/32xb 0x240021c0
0x240021c0 <altimeter_ready_bsem>:	0xc0	0x21	0x00	0x24	0xc0	0x21	0x00	0x24
0x240021c8 <altimeter_ready_bsem+8>:	0x00	0x00	0x00	0x00	0xcc	0x21	0x00	0x24
0x240021d0 <altimeter_data_mtx+4>:	0xcc	0x21	0x00	0x24	0x00	0x00	0x00	0x00
0x240021d8 <altimeter_data_mtx+12>:	0x00	0x00	0x00	0x00	0x01	0x55	0x55	0x55

p &altimeter_ready_bsem
$4 = (binary_semaphore_t *) 0x240021c0 <altimeter_ready_bsem>
p /x altimeter_data_mtx
$5 = {queue = {next = 0x240021cc, prev = 0x240021cc}, owner = 0x0, next = 0x0}
p /x altimeter_ready_bsem
$6 = {sem = {queue = {next = 0x240021c0, prev = 0x240021c0}, cnt = 0x0}}
x/8xb 0x240021dc
0x240021dc <altimeter_data>:	0x01	0x55	0x55	0x55	0xcd	0xcc	0xe2	0x41
p &altimeter_data
$7 = (altimeter_data_t *) 0x240021dc <altimeter_data>
p /x altimeter_data
$8 = {data_valid = 0x1, temperature = 0x1c, pressure = 0x18721, pressure_reference = 0x18722, altitude = 0x0}
watch *0x240021d4
Hardware watchpoint 3: *0x240021d4

Program
 received signal SIGTRAP, Trace/breakpoint trap.
chMtxLockS (mp=0x240021cc <altimeter_data_mtx>) at ../ChibiOS_21.6.0/os/rt/src/chmtx.c:235
235	    mp->next = currtp->mtxlist;

### This is altimeter_data_mtx after the event:

x/32xb 0x240021c0
0x240021c0 <altimeter_ready_bsem>:	0xc0	0x21	0x00	0x24	0xc0	0x21	0x00	0x24
0x240021c8 <altimeter_ready_bsem+8>:	0x00	0x00	0x00	0x00	0xcc	0x21	0x00	0x24
0x240021d0 <altimeter_data_mtx+4>:	0x10	0x04	0x00	0x08	0x00	0x00	0x00	0x01
0x240021d8 <altimeter_data_mtx+12>:	0x00	0x00	0x00	0x00	0x01	0x55	0x55	0x55
p /x altimeter_data_mtx
$2 = {queue = {next = 0x240021cc, prev = 0x8000410}, owner = 0x1000000, next = 0x0}

### Allright, something is changing our memory... I look for "8000410" in imu.list file:

0800040e <__port_exit_from_isr>:
                movt    r3, #:upper16:SCB_ICSR
                mov     r2, ICSR_PENDSVSET
                str     r2, [r3, #0]
                cpsie   i
#else /* !CORTEX_SIMPLIFIED_PRIORITY */
                svc     #0
 800040e:	df00      	svc	0
#endif /* !CORTEX_SIMPLIFIED_PRIORITY */
.L1:            b       .L1
 8000410:	e7fe      	b.n	8000410 <__port_exit_from_isr+0x2>
	...

08000414 <memcpy>:
 8000414:	4684      	mov	ip, r0
 8000416:	ea41 0300 	orr.w	r3, r1, r0
 800041a:	f013 0303 	ands.w	r3, r3, #3
 
### INTERESTING! 8000410 is just before memcpy location. Need to look closer on this copying business...

### Let's quickly check the stack...

p &waAltimeter
$3 = (stkalign_t (*)[91]) 0x240021f0 <waAltimeter>
x/256xb 0x240021f0
0x240021f0 <waAltimeter>:		0xb3	0xe5	0x34	0x0e	0x80	0x06	0x00	0x00
0x240021f8 <waAltimeter+8>:		0x00	0x00	0x00	0x00	0x00	0x80	0x00	0x00
0x24002200 <waAltimeter+16>:	0x7c	0xc8	0x00	0x08	0x00	0x02	0x00	0x81
0x24002208 <waAltimeter+24>:	0x00	0x00	0x00	0x00	0x81	0x67	0x00	0x08
0x24002210 <waAltimeter+32>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x24002218 <waAltimeter+40>:	0x00	0x00	0x00	0x00	0x14	0x00	0x00	0x00
0x24002220 <waAltimeter+48>:	0x71	0x39	0x6d	0x0c	0x00	0x88	0xcb	0x69
0x24002228 <waAltimeter+56>:	0x00	0x88	0xcb	0x69	0x00	0x00	0x00	0x04
0x24002230 <waAltimeter+64>:	0x3c	0x1c	0x00	0x24	0x1d	0xb7	0x00	0x08
0x24002238 <waAltimeter+72>:	0xa0	0xb3	0x00	0x08	0x00	0x00	0x00	0x41
0x24002240 <waAltimeter+80>:	0x00	0x00	0x00	0x00	0x81	0x67	0x00	0x08
0x24002248 <waAltimeter+88>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x24002250 <waAltimeter+96>:	0x00	0x00	0x00	0x00	0x17	0x92	0x94	0xc1
0x24002258 <waAltimeter+104>:	0x96	0x99	0x04	0x00	0x2b	0xb0	0x41	0x92
0x24002260 <waAltimeter+112>:	0xec	0x90	0x08	0x0e	0x67	0x38	0x00	0x00
0x24002268 <waAltimeter+120>:	0x00	0x00	0x00	0x00	0xe9	0x6d	0x03	0xa9
0x24002270 <waAltimeter+128>:	0xff	0xff	0xff	0xff	0x73	0x08	0x00	0x08
0x24002278 <waAltimeter+136>:	0x80	0x22	0x00	0x24	0xbd	0xb4	0x00	0x08
0x24002280 <waAltimeter+144>:	0x6a	0x7e	0xf1	0x00	0x00	0x00	0x00	0x00
0x24002288 <waAltimeter+152>:	0xb4	0x4a	0xd1	0xff	0xff	0xff	0xff	0xff
0x24002290 <waAltimeter+160>:	0x71	0x39	0x6d	0x0c	0x00	0x00	0x00	0x00
0x24002298 <waAltimeter+168>:	0x00	0x71	0x39	0x6d	0x0c	0x00	0x00	0x00
0x240022a0 <waAltimeter+176>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x240022a8 <waAltimeter+184>:	0x00	0x88	0xcb	0x69	0x63	0x00	0x00	0x04
0x240022b0 <waAltimeter+192>:	0x90	0x82	0x39	0x90	0x14	0x00	0x00	0x00
0x240022b8 <waAltimeter+200>:	0x70	0xa3	0x64	0x95	0x46	0xad	0x0a	0x12
0x240022c0 <waAltimeter+208>:	0xb8	0xb9	0x26	0x5b	0xcc	0xbe	0xf9	0xff
0x240022c8 <waAltimeter+216>:	0xf9	0xff	0xff	0xff	0xff	0xff	0xff	0xff
0x240022d0 <waAltimeter+224>:	0x2c	0xff	0xff	0xff	0xff	0xff	0xff	0xff
0x240022d8 <waAltimeter+232>:	0x24	0x1f	0x00	0x00	0x00	0x00	0x00	0x00
0x240022e0 <waAltimeter+240>:	0x00	0x01	0x00	0x00	0x00	0x00	0x00	0x00
0x240022e8 <waAltimeter+248>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00

### Ouch:/ 256 is not enough? Context below. "0x01	0x55	0x55	0x55" in altimeter_data persisted, why?

x/256xb 0x240021c0
0x240021c0 <altimeter_ready_bsem>:		0xc0	0x21	0x00	0x24	0xc0	0x21	0x00	0x24
0x240021c8 <altimeter_ready_bsem+8>:	0x00	0x00	0x00	0x00	0xcc	0x21	0x00	0x24
0x240021d0 <altimeter_data_mtx+4>:		0x10	0x04	0x00	0x08	0x00	0x00	0x00	0x01
0x240021d8 <altimeter_data_mtx+12>:		0x00	0x00	0x00	0x00	0x01	0x55	0x55	0x55
0x240021e0 <altimeter_data+4>:			0x0a	0xd7	0xcf	0x41	0xe2	0xae	0xc3	0x47
0x240021e8 <altimeter_data+12>:			0xf0	0xb3	0xc3	0x47	0x88	0x1c	0x62	0x3f
0x240021f0 <waAltimeter>:				0xb3	0xe5	0x34	0x0e	0x80	0x06	0x00	0x00
0x240021f8 <waAltimeter+8>:				0x00	0x00	0x00	0x00	0x00	0x80	0x00	0x00
0x24002200 <waAltimeter+16>:			0x7c	0xc8	0x00	0x08	0x00	0x02	0x00	0x81
0x24002208 <waAltimeter+24>:			0x00	0x00	0x00	0x00	0x81	0x67	0x00	0x08
0x24002210 <waAltimeter+32>:			0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x24002218 <waAltimeter+40>:			0x00	0x00	0x00	0x00	0x14	0x00	0x00	0x00
0x24002220 <waAltimeter+48>:			0x71	0x39	0x6d	0x0c	0x00	0x88	0xcb	0x69

### altimeter_data seems OK. Weird, but it has to be an overflow.

p /x altimeter_data_mtx
$3 = {queue = {next = 0x240021cc, prev = 0x8000410}, owner = 0x1000000, next = 0x0}
p /x altimeter_data
$4 = {data_valid = 0x1, temperature = 0x1d, pressure = 0x1875c, pressure_reference = 0x18763, altitude = 0x0}
p altimeter_data
$5 = {data_valid = true, temperature = 29.3700008, pressure = 100188.805, pressure_reference = 100195.555, altitude = 0.596429706}

### After enlarging stack size by 64 bytes (256 -> 320) there no hard faults anymore. I also see familiar address, 8000410:

p &waAltimeter
$1 = (stkalign_t (*)[99]) 0x240021f0 <waAltimeter>
x /320xb 0x240021f0
0x240021f0 <waAltimeter>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x240021f8 <waAltimeter+8>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002200 <waAltimeter+16>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002208 <waAltimeter+24>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002210 <waAltimeter+32>:	0x10	0x04	0x00	0x08	0x00	0x00	0x00	0x01 <-- ### erroneous values appear in a place with the same exact offset in relation to the old stack end
0x24002218 <waAltimeter+40>:	0x55	0x55	0x55	0x55	0x55	0x55	0x55	0x55
0x24002220 <waAltimeter+48>:	0x00	0x00	0x00	0x00	0x55	0x55	0x55	0x55
0x24002228 <waAltimeter+56>:	0xab	0x87	0x00	0x00	0x01	0x00	0x00	0x00 <-- ### this line and seven above represent new additional bytes in stack
0x24002230 <waAltimeter+64>:	0x00	0x88	0x00	0x00	0x45	0x04	0x52	0xbf <-- ### this used to be the end of the 256-byte stack
0x24002238 <waAltimeter+72>:	0xac	0x87	0x00	0x00	0x67	0x92	0x00	0x00
0x24002240 <waAltimeter+80>:	0xce	0xc7	0x00	0x08	0x00	0x02	0x00	0x91
0x24002248 <waAltimeter+88>:	0x00	0x00	0x00	0x00	0x81	0x67	0x00	0x08
